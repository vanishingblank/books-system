{"ast":null,"code":"export default {\n  name: \"GoodsManage\",\n  data() {\n    return {\n      tableData: [],\n      storageData: [],\n      goodstypeData: [],\n      storage: '',\n      goodstype: '',\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      name: '',\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        name: '',\n        storage: '',\n        goodstype: '',\n        count: 0,\n        remark: ''\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入书籍名',\n          trigger: 'blur'\n        }],\n        storage: [{\n          required: true,\n          message: '请输入书库名',\n          trigger: 'blur'\n        }],\n        goodstype: [{\n          required: true,\n          message: '请输入类型名',\n          trigger: 'blur'\n        }],\n        count: [{\n          required: true,\n          message: '请输入数量',\n          trigger: 'blur'\n        }, {\n          pattern: /^([1-9][0-9]*){1,4}$/,\n          message: '数量必须为正整数',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1;\n      this.pageSize = val;\n      this.loadPost();\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val;\n      this.loadPost();\n    },\n    //查询\n    loadPost() {\n      this.$axios.post('http://localhost:8090/goods/listPage', {\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          storage: this.storage + '',\n          goodstype: this.goodstype + ''\n        }\n      }).then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.tableData = res.data;\n          this.total = res.total;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    },\n    resetParam() {\n      this.name = '';\n      this.storage = '';\n      this.goodstype = '';\n    },\n    addData() {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.resetForm();\n      });\n      this.form.id = '';\n    },\n    saveData() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          if (this.form.id) {\n            this.doMod();\n          } else {\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    mod(row) {\n      this.centerDialogVisible = true;\n      this.$nextTick(() => {\n        this.form.id = row.id;\n        this.form.name = row.name;\n        this.form.storage = row.storage;\n        this.form.goodstype = row.goodstype;\n        this.form.count = row.count;\n        this.form.remark = row.remark;\n      });\n    },\n    doMod() {\n      this.$axios.post('http://localhost:8090/goods/update', this.form).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '修改成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: '修改失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    doSave() {\n      this.$axios.post('http://localhost:8090/goods/save', this.form).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '添加成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false;\n          this.loadPost();\n          this.resetForm();\n        } else {\n          this.$message({\n            message: '添加失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    del(id) {\n      this.$axios.get('http://localhost:8090/goods/del?id=' + id).then(res => res.data).then(res => {\n        if (res.code == 200) {\n          this.$message({\n            message: '删除成功！',\n            type: 'success'\n          });\n          this.loadPost();\n        } else {\n          this.$message({\n            message: '删除失败！',\n            type: 'error'\n          });\n        }\n      });\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    loadStorage() {\n      this.$axios.get('http://localhost:8090/storage/list').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.storageData = res.data;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    },\n    loadGoodstype() {\n      this.$axios.get('http://localhost:8090/goodstype/list').then(res => res.data).then(res => {\n        console.log(res);\n        if (res.code == 200) {\n          this.goodstypeData = res.data;\n        } else {\n          alert('获取数据失败');\n        }\n      });\n    },\n    //对应书库\n    formatStorage(row) {\n      let t = this.storageData.find(item => {\n        return item.id == row.storage;\n      });\n      return t && t.name;\n    },\n    //对应类型\n    formatGoodsType(row) {\n      let t = this.goodstypeData.find(item => {\n        return item.id == row.goodstype;\n      });\n      return t && t.name;\n    }\n  },\n  beforeMount() {\n    //加载上述方法\n    this.loadStorage();\n    this.loadGoodstype();\n    this.loadPost();\n  }\n};","map":{"version":3,"names":["name","data","tableData","storageData","goodstypeData","storage","goodstype","pageNum","pageSize","total","centerDialogVisible","form","id","count","remark","rules","required","message","trigger","pattern","methods","handleSizeChange","val","console","log","loadPost","handleCurrentChange","$axios","post","param","then","res","code","alert","resetParam","addData","$nextTick","resetForm","saveData","$refs","validate","valid","doMod","doSave","mod","row","$message","type","del","get","resetFields","loadStorage","loadGoodstype","formatStorage","t","find","item","formatGoodsType","beforeMount"],"sources":["src/components/goods/GoodsManage.vue"],"sourcesContent":["<script>\nexport default {\n  name: \"GoodsManage\",\n  data() {\n    return {\n      tableData: [],\n      storageData: [],\n      goodstypeData: [],\n      storage: '',\n      goodstype: '',\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      name: '',\n      centerDialogVisible: false,\n      form: {\n        id: '',\n        name: '',\n        storage: '',\n        goodstype: '',\n        count: 0,\n        remark: ''\n      },\n      rules: {\n        name: [\n          {required: true, message: '请输入书籍名', trigger: 'blur'}\n        ],\n        storage: [\n          {required: true, message: '请输入书库名', trigger: 'blur'}\n        ],\n        goodstype: [\n          {required: true, message: '请输入类型名', trigger: 'blur'}\n        ],\n        count: [\n          {required: true, message: '请输入数量', trigger: 'blur'},\n          {pattern: /^([1-9][0-9]*){1,4}$/, message: '数量必须为正整数', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  methods:{\n    handleSizeChange(val) {\n      console.log(`每页 ${val} 条`);\n      this.pageNum = 1\n      this.pageSize = val\n      this.loadPost()\n    },\n    handleCurrentChange(val) {\n      console.log(`当前页: ${val}`);\n      this.pageNum = val\n      this.loadPost()\n    },\n    //查询\n    loadPost(){\n      this.$axios.post('http://localhost:8090/goods/listPage',{\n        pageSize: this.pageSize,\n        pageNum: this.pageNum,\n        param: {\n          name: this.name,\n          storage: this.storage+'',\n          goodstype: this.goodstype+''\n        }\n      }).then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n          this.tableData=res.data\n          this.total=res.total\n        }else{\n          alert('获取数据失败')\n        }\n      })\n    },\n    resetParam(){\n      this.name = ''\n      this.storage = ''\n      this.goodstype = ''\n\n    },\n    addData(){\n      this.centerDialogVisible = true\n      this.$nextTick(()=>{this.resetForm()})\n      this.form.id = ''\n    },\n    saveData(){\n      this.$refs.form.validate((valid) => {\n        if (valid) {\n          if(this.form.id){\n            this.doMod();\n          }else{\n            this.doSave();\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    mod(row){\n      this.centerDialogVisible = true\n      this.$nextTick(()=>{\n        this.form.id = row.id\n        this.form.name = row.name\n        this.form.storage = row.storage\n        this.form.goodstype = row.goodstype\n        this.form.count = row.count\n        this.form.remark = row.remark\n      })\n\n    },\n    doMod(){\n      this.$axios.post('http://localhost:8090/goods/update',this.form).then(res=>res.data).then(res=>{\n        if(res.code==200){\n          this.$message({\n            message: '修改成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false\n          this.loadPost()\n          this.resetForm()\n        }else{\n          this.$message({\n            message: '修改失败！',\n            type: 'error'\n          });\n        }\n      })\n    },\n    doSave(){\n      this.$axios.post('http://localhost:8090/goods/save',this.form).then(res=>res.data).then(res=>{\n        if(res.code==200){\n          this.$message({\n            message: '添加成功！',\n            type: 'success'\n          });\n          this.centerDialogVisible = false\n          this.loadPost()\n          this.resetForm()\n        }else{\n          this.$message({\n            message: '添加失败！',\n            type: 'error'\n          });\n        }\n      })\n    },\n    del(id){\n      this.$axios.get('http://localhost:8090/goods/del?id='+id).then(res=>res.data).then(res=>{\n        if(res.code==200){\n          this.$message({\n            message: '删除成功！',\n            type: 'success'\n          });\n          this.loadPost()\n        }else{\n          this.$message({\n            message: '删除失败！',\n            type: 'error'\n          });\n        }\n      })\n    },\n    resetForm() {\n      this.$refs.form.resetFields();\n    },\n    loadStorage(){\n      this.$axios.get('http://localhost:8090/storage/list').then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n          this.storageData=res.data\n        }else{\n          alert('获取数据失败')\n        }\n      })\n    },\n    loadGoodstype(){\n      this.$axios.get('http://localhost:8090/goodstype/list').then(res=>res.data).then(res=>{\n        console.log(res)\n        if(res.code==200){\n          this.goodstypeData=res.data\n        }else{\n          alert('获取数据失败')\n        }\n      })\n    },\n    //对应书库\n    formatStorage(row){\n      let t = this.storageData.find(item=>{\n        return item.id == row.storage\n      })\n      return t && t.name\n    },\n    //对应类型\n    formatGoodsType(row){\n      let t = this.goodstypeData.find(item=>{\n        return item.id == row.goodstype\n      })\n      return t && t.name\n    }\n  },\n  beforeMount() {//加载上述方法\n    this.loadStorage()\n    this.loadGoodstype()\n    this.loadPost()\n  }\n}\n</script>\n\n<template>\n  <div>\n    <div style=\"text-align: center; margin-bottom: 5px\">\n      <el-input v-model=\"name\"\n                placeholder=\"请输入书籍名\"\n                suffix-icon=\"el-icon-search\"\n                style=\"width: 200px\"\n                @keyup.enter.native=\"loadPost\"></el-input>\n      <el-select v-model=\"storage\" placeholder=\"请选择书库\">\n        <el-option\n            v-for=\"item in storageData\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\">\n        </el-option>\n      </el-select>\n      <el-select v-model=\"goodstype\" placeholder=\"请选择类型\">\n        <el-option\n            v-for=\"item in goodstypeData\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\">\n        </el-option>\n      </el-select>\n      <el-button style=\"margin-left: 10px\" @click=\"loadPost\">查询</el-button>\n      <el-button @click=\"resetParam\">重置</el-button>\n      <el-button style=\"margin-left: 10px\" @click=\"addData\">新增</el-button>\n    </div>\n    <el-table :data=\"tableData\"\n              :header-cell-style=\"{background:'rgb(186,204,238)',color:'rgba(0,0,0,0.6)'}\"\n              border\n    >\n      <el-table-column prop=\"id\" label=\"ID\" width=\"100\">\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"书籍名\" width=\"200\">\n      </el-table-column>\n      <el-table-column prop=\"storage\" label=\"书库\" width=\"100\" :formatter=\"formatStorage\">\n      </el-table-column>\n      <el-table-column prop=\"goodstype\" label=\"类型\" width=\"200\" :formatter=\"formatGoodsType\">\n      </el-table-column>\n      <el-table-column prop=\"count\" label=\"数量\" width=\"100\">\n      </el-table-column>\n      <el-table-column prop=\"remark\" label=\"备注\">\n      </el-table-column>\n\n      <el-table-column prop=\"operate\" label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"small\" type=\"primary\" @click=\"mod(scope.row)\" style=\"margin-left: 25px\">编辑</el-button>\n          <el-popconfirm\n              title=\"您确定删除该条数据吗？\"\n              @confirm=\"del(scope.row.id)\"\n              style=\"margin-left: 10px\"\n          >\n            <el-button slot=\"reference\" size=\"small\" type=\"danger\" style=\"margin-left: 10px\">删除</el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination style=\"text-align:center; margin-top: 10px\"\n                   @size-change=\"handleSizeChange\"\n                   @current-change=\"handleCurrentChange\"\n                   :current-page=\"pageNum\"\n                   :page-sizes=\"[10, 20, 50, 100]\"\n                   :page-size=\"pageSize\"\n                   layout=\"total, sizes, prev, pager, next, jumper\"\n                   :total=\"total\">\n    </el-pagination>\n    <el-dialog\n        title=\"提示\"\n        :visible.sync=\"centerDialogVisible\"\n        width=\"30%\"\n        center>\n      <el-form ref=\"form\" :rules=\"rules\" :model=\"form\" label-width=\"80px\">\n        <el-form-item label=\"书籍名\" prop=\"name\">\n          <el-col :span=\"18\">\n            <el-input v-model=\"form.name\"></el-input>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"书库\" prop=\"storage\">\n          <el-col :span=\"18\">\n            <el-select v-model=\"form.storage\" placeholder=\"请选择书库\">\n              <el-option\n                  v-for=\"item in storageData\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                  :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"类型\" prop=\"goodstype\">\n          <el-col :span=\"18\">\n            <el-select v-model=\"form.goodstype\" placeholder=\"请选择类型\">\n              <el-option\n                  v-for=\"item in goodstypeData\"\n                  :key=\"item.id\"\n                  :label=\"item.name\"\n                  :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"数量\" prop=\"count\">\n          <el-col :span=\"18\">\n            <el-input v-model=\"form.count\"></el-input>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-col :span=\"18\">\n            <el-input v-model=\"form.remark\" type=\"textarea\"></el-input>\n          </el-col>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"centerDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"saveData\">确 定</el-button>\n      </span>\n    </el-dialog>\n  </div>\n</template>\n\n<style scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}